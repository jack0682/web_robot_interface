version: '3.8'

services:
  # MQTT Broker
  emqx:
    image: emqx/emqx:5.0.0
    container_name: robot_dashboard_emqx
    ports:
      - "1883:1883"     # MQTT
      - "8083:8083"     # WebSocket
      - "8084:8084"     # WSS
      - "18083:18083"   # Dashboard
    environment:
      - EMQX_NAME=emqx
      - EMQX_HOST=127.0.0.1
    volumes:
      - emqx_data:/opt/emqx/data
      - emqx_log:/opt/emqx/log
    restart: unless-stopped
    networks:
      - robot_network

  # MQTT Processor
  mqtt_processor:
    build:
      context: ./mqtt_processor
      dockerfile: Dockerfile
    container_name: robot_dashboard_mqtt_processor
    ports:
      - "8080:8080"
    environment:
      - MQTT_HOST=emqx
      - MQTT_PORT=1883
      - WS_PORT=8080
      - LOG_LEVEL=info
    depends_on:
      - emqx
    restart: unless-stopped
    networks:
      - robot_network
    volumes:
      - ./data/logs/mqtt:/app/logs

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: robot_dashboard_backend
    ports:
      - "5000:5000"
    environment:
      - PORT=5000
      - NODE_ENV=production
      - MQTT_HOST=emqx
      - MQTT_PORT=1883
      - FRONTEND_URL=http://localhost:3000
    depends_on:
      - emqx
      - mqtt_processor
    restart: unless-stopped
    networks:
      - robot_network
    volumes:
      - ./data/logs/backend:/app/logs
      - ./configs:/app/configs:ro

  # Frontend (for production)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: robot_dashboard_frontend
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://localhost:5000
      - REACT_APP_WS_URL=ws://localhost:8080
      - REACT_APP_MQTT_URL=ws://localhost:8083/mqtt
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - robot_network

  # Nginx Reverse Proxy (선택사항)
  nginx:
    image: nginx:alpine
    container_name: robot_dashboard_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./configs/deployment/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./data/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - robot_network

volumes:
  emqx_data:
  emqx_log:

networks:
  robot_network:
    driver: bridge
